{"meta":{"title":"Tige's Blog","subtitle":"","description":"","author":"Tigee","url":"http://example.com"},"pages":[{"title":"about","date":"2021-01-26T08:55:30.000Z","updated":"2021-01-26T09:28:55.056Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"欢迎来到这里。 关于博客 本站采用 Hexo 框架，使用 Snippet 主题，托管于GitHub。"}],"posts":[{"title":"博客图床使用笔记","slug":"博客图床使用笔记","date":"2021-02-08T06:57:01.000Z","updated":"2021-02-08T12:22:02.061Z","comments":true,"path":"2021/02/08/博客图床使用笔记/","link":"","permalink":"http://example.com/2021/02/08/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","excerpt":"","text":"一、前言日常写作用的最多的就是 Markdown 语法。Typora 作为大佬们一致推荐的 Markdown 编辑器，用起来最舒服！完全免费，而且支持实时预览 Markdown 文本 所以之前我的写作方案一直是：Typora + OneDrive 。因为这样所有操作都可以在本地进行，没有上传图片的烦恼 但是在博客写作中想要插入一些图片时，就需要将图片上传至图床生成 URL。网上一番探索后，最终挑选出以下几种方案： 阿里云对象存储 OSS（一年9块） Github图床 + jsdelivr 的 CDN 加速 Gtiee图床（码云） 另外推荐配合 PicGo ，可以快速上传图片并获取外链，美滋滋~ 所以目前我的方案是： Gitee + PicGo + Typora ，配置过程顺便做了笔记，留作以后参考。 二、本文软件/网站介绍 Gitee ：Gitee（码云），又称为国内的github。本文用作图片存储 PicGo ：一个用于快速上传图片并获取图片 URL 链接的工具，本文用于关联 Gitee 仓库 Typora ：一款支持实时预览的 Markdown 文本编辑器，本文用于关联 PicGo ，插入图片时即可自动上传至 Gitee 三、配置 Gitee3.1 新建仓库登录 gitee ，点击右上角的 + 号，新建仓库 3.2 新建仓库基本配置输入仓库名称，选择公开仓库，勾选使用 Readme 文件初始化这个仓库，然后点击 “创建” 即可 3.3 生成私人令牌（token）点击设置-私人令牌-生成新令牌。注意令牌只会显示一次，要注意保存，后面在 PicGo 中会用到。如果忘记也可以删除重新生成。 四、安装配置 PicGo4.1 安装图床插件由于 PicGo 本体并不支持 Gitee 图床，所以需要通过第三方图床插件来实现。找到 gitee-uploader 插件，安装成功图床中便会出现 gitee 一栏 注意：电脑中必须先安装 node.js 才能安装插件，安装完重启即可 4.2 配置 gitee 图床 repo：用户名/仓库名称，比如我自己的仓库 tigeedev/blog-Image branch：分支，填 master token：填入前面码云的私人令牌，搞丢了可以重新生成 path：路径，一般写上 img customPath：这一项和下一项都不用填 然后点击确定，并设为默认图床 4.3 激活PicGo-Server2.2 版本之后，PicGo内部会默认开启一个小型的服务器，用于配合其他应用来调用PicGo进行上传。 打开 PicGo 设置页面，点击 “设置 Server” ，参考下图进行设置即可。 到这一步，已经可以在 PicGo 中上传图片了。上传成功 PicGo 会有提示，也可以在 Gitee 仓库中查看 五、配置 Typora用 Typora 写作时，如果插入的图片能直接上传到 Gitee 岂不是很方便？所以在 Typora 0.9.84 及以上版本已经支持了 PicGo 点击 文件–偏好设置–图像，插入图片时选择 “上传图片” ，然后下面选择本地 PicGo 的路径即可 验证图片上传 点击 “验证图片上传” ，验证成功会返回如下结果。 至此已经全部设置完成，以后在 Typora 中插入图片时，就可以自动上传到对应图床啦！ 六、管理图片所有上传的图片都可以在 Gitee 仓库中查看， 也可以在 PicGo 的相册中进行管理 不过可能是插件的原因，对相册中的图片进行的操作都会同步到 Gitee。也就是说在相册中删除图片时，Gitee中的图片也会同步删除，所以一定注意不要误删。","categories":[{"name":"充电学习","slug":"充电学习","permalink":"http://example.com/categories/%E5%85%85%E7%94%B5%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"keywords":[{"name":"充电学习","slug":"充电学习","permalink":"http://example.com/categories/%E5%85%85%E7%94%B5%E5%AD%A6%E4%B9%A0/"}]},{"title":"博客如何发布文章？","slug":"博客如何发布文章？","date":"2021-02-08T06:56:28.000Z","updated":"2021-02-08T09:38:00.565Z","comments":true,"path":"2021/02/08/博客如何发布文章？/","link":"","permalink":"http://example.com/2021/02/08/%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%EF%BC%9F/","excerpt":"","text":"一、前言发布文章前需要在本地搭建各种环境，比如：git、node.js 等。具体可以参考 Hexo使用笔记 二、自动生成文章1$ hexo new 第二篇文章 三、编辑文章输入命令后会在 D:\\Workspace\\hexo\\source_posts 目录下生成 .md 文件，可以打开直接编辑 而且可以在scaffolds目录下的post.md中修改新增文章 Front-matter 模板，这样下次自动生成的新文章就可以直接使用 3.1 补充Hexo标签和分类方法的分歧 只有文章支持分类和标签，可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。 WordPress支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是Hexo不支持指定多个同级分类。下面的指定方法： 123categories:- Diary- Life 会使分类Life成为Diary的子分类，而不是并列分类。因此，为了保证文章分类的准确，尽可能只留一个分类 四、编辑完成发布即可","categories":[{"name":"充电学习","slug":"充电学习","permalink":"http://example.com/categories/%E5%85%85%E7%94%B5%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"keywords":[{"name":"充电学习","slug":"充电学习","permalink":"http://example.com/categories/%E5%85%85%E7%94%B5%E5%AD%A6%E4%B9%A0/"}]},{"title":"Hexo使用笔记","slug":"Hexo使用笔记","date":"2021-01-26T08:28:01.000Z","updated":"2021-02-08T09:12:48.649Z","comments":true,"path":"2021/01/26/Hexo使用笔记/","link":"","permalink":"http://example.com/2021/01/26/Hexo%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","excerpt":"","text":"前言这里只记录了自己在安装过程中所遇到的问题及解决方法。具体过程可参考以下两篇文章 hexo搭建指南具体教程： 使用hexo+github搭建免费个人博客详细教程 结合hexo在GitHub上搭建个人博客——全过程 两者可以搭配使用~ 安装过程问题解决本地安装hexo博客框架需借助 npm 包管理器来安装。因为国内安装镜像源很慢，所以利用 npm 安装 cnpm。 用淘宝链接进行安装： 1$ npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org 看下 cnpm 的版本：cnpm -v 然后用 cnpm 安装 Hexo 框架 1$ cnpm install -g hexo-cli 用 hexo -v 验证，出现版本号说明安装成功 Hexo 初始化本地新建名为 hexo 的文件夹（名字随便取），比如我的是：D:\\Workspace\\hexo，作为以后存放代码的地方 12$ cd &#x2F;D&#x2F;Workspace&#x2F;hexo&#x2F;$ hexo init 初始化执行 init 命令后一直在这个位置，这个地方折腾了好久才解决… 不知过了多久，报了下面这个错误 一定要按自己的错误去找解决方法！！可参考官网解决：https://hexo.io/docs/troubleshooting.html 123456789101112$ hexo initINFO Cloning hexo-starter https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-starter.gitfatal: unable to access &#39;https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-starter.git&#x2F;&#39;: Failed to connect to localhost port 62603: Connection refusedWARN git clone failed. Copying data insteadFATAL &#123; err: [Error: ENOENT: no such file or directory, scandir &#39;C:\\Users\\Admin\\AppData\\Roaming\\npm\\node_modules\\hexo-cli\\assets&#39;] &#123; errno: -4058, code: &#39;ENOENT&#39;, syscall: &#39;scandir&#39;, path: &#39;C:\\\\Users\\\\Admin\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\hexo-cli\\\\assets&#39; &#125;&#125; 其中有个错误如下，按路径查找发现没有 assets 文件夹，在对应位置手动创建一个即可 1err: [Error: ENOENT: no such file or directory, scandir &#39;C:\\Users\\Admin\\AppData\\Roaming\\npm\\node_modules\\hexo-cli\\assets&#39;] 再次初始化，这时发现还有一个错误，这个错误是因为我之前按照网上的方法，错误的给 git 设置了代理（代理端口为62603） 取消 git 代理，然后再次重新初始化 如果提示 “ err: Error: target not empty”，把 hexo 文件夹里的文件全部删除，再次初始化即可。可以看到整个初始化的过程是非常快的 12$ git config --global --unset http.proxy $ hexo init 这时 hexo 会自动下载一些文件到这个目录，包括node_modules，目录结构如下图： 12$ hexo g # 生成$ hexo s # 启动服务 初始化完成，再次输入以上两个命令。hexo就会在public文件夹生成相关html文件，这些文件将来需要提交到github hexo s 是开启本地预览服务，打开浏览器访问 http://localhost:4000，可以看到博客已经创建成功过啦！！！ 首次初始化，会有一篇名为Hello World 的文章，默认界面就长这样：","categories":[{"name":"充电学习","slug":"充电学习","permalink":"http://example.com/categories/%E5%85%85%E7%94%B5%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"keywords":[{"name":"充电学习","slug":"充电学习","permalink":"http://example.com/categories/%E5%85%85%E7%94%B5%E5%AD%A6%E4%B9%A0/"}]}]}